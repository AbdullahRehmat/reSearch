version: "3"

services:

  mongo-db:
    image: mongo
    hostname: mongo-db
    container_name: MongoDB
    restart: unless-stopped
    volumes:
      - ./MongoDB:/data/db
    networks:
      - backend
    #expose:
    #  - "27020"
    ports:
      - "27020:27017"

  redis-api:
    hostname: redis-api
    container_name: RedisAPI
    build: ./RedisAPI
    restart: unless-stopped
    networks:
      - backend
    #expose:
    #  - "6379"
    ports:
      - 6379:6379

  #content-scraper:
  #  hostname: content-scraper
  #  container_name: ContentScraper
  #  build: ./ContentScraper
  #  volumes:
  #    - ./ContentScraper:/usr/src/app
  #  networks:
  #    - backend
  #  depends_on:
  #    - mongo-db

  py-api:
    hostname: py-api
    container_name: PyAPI
    build: ./PyAPI
    restart: unless-stopped
    volumes:
      - ./PyAPI:/usr/src/app
    networks:
      - frontend
      - backend
    #expose:
    #  - "80"
    ports:
      - "8000:80"
    depends_on:
      - redis-api
      - mongo-db

  go-api:
    hostname: go-api
    container_name: GoAPI
    build: ./GoAPI
    restart: unless-stopped
    networks:
      - frontend
      - backend
    #expose:
    #    - "80"
    ports:
      - "5000:80"
    depends_on:
      - redis-api
      - mongo-db

  search-engine:
    hostname: search-engine
    container_name: SearchEngine
    build: ./SearchEngine
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - redis-api
      - py-api
      - go-api
      - mongo-db

  website:
    hostname: website
    container_name: Website
    restart: always
    build: ./Website
    networks:
      - frontend
    expose:
      - "8000"
    depends_on:
      - py-api
      - go-api

  nginx:
    hostname: nginx
    container_name: Nginx
    restart: always
    build: ./Nginx
    networks:
      - frontend
    ports:
      - "80:80"
    depends_on:
      - website

networks:
  frontend:
    driver: bridge

  backend:
    driver: bridge
